//
// Generated file, do not edit! Created by nedtool 5.6 from ClientRequest.msg.
//

#ifndef __CLIENTREQUEST_M_H
#define __CLIENTREQUEST_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>ClientRequest.msg:20</tt> by nedtool.
 * <pre>
 * message ClientRequest
 * {
 *     // The requested operation over the store may be "GET" and "PUT".
 *     string operation;
 *     string key;
 *     string value;
 * 
 *     int originator;
 *     int clientId;
 * 
 * 
 *     // Timestamp is simtime_t timestamp in the _m class.
 * 
 *     string digest;
 *     string signature;
 * }
 * </pre>
 */
class ClientRequest : public ::omnetpp::cMessage
{
  protected:
    ::omnetpp::opp_string operation;
    ::omnetpp::opp_string key;
    ::omnetpp::opp_string value;
    int originator;
    int clientId;
    ::omnetpp::opp_string digest;
    ::omnetpp::opp_string signature;
    omnetpp::simtime_t timestamp;

  private:
    void copy(const ClientRequest& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ClientRequest&);

  public:
    ClientRequest(const char *name=nullptr, short kind=0);
    ClientRequest(const ClientRequest& other);
    virtual ~ClientRequest();
    ClientRequest& operator=(const ClientRequest& other);
    virtual ClientRequest *dup() const override {return new ClientRequest(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getOperation() const;
    virtual void setOperation(const char * operation);
    virtual const char * getKey() const;
    virtual void setKey(const char * key);
    virtual const char * getValue() const;
    virtual void setValue(const char * value);
    virtual int getOriginator() const;
    virtual void setOriginator(int originator);
    virtual int getClientId() const;
    virtual void setClientId(int clientId);
    virtual const char * getDigest() const;
    virtual void setDigest(const char * digest);
    virtual const char * getSignature() const;
    virtual void setSignature(const char * signature);

    const omnetpp::simtime_t& getTimestamp() const {
        return timestamp;
    }

    void setTimestamp(const omnetpp::simtime_t &timestamp) {
        this->timestamp = timestamp;
    }
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ClientRequest& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ClientRequest& obj) {obj.parsimUnpack(b);}


#endif // ifndef __CLIENTREQUEST_M_H

